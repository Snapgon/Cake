[gd_scene load_steps=43 format=2]

[ext_resource path="res://Game/Game.tscn" type="PackedScene" id=1]
[ext_resource path="res://Scripts/Main.gd" type="Script" id=2]
[ext_resource path="res://Gui/Main Menu.tscn" type="PackedScene" id=3]
[ext_resource path="res://Stuff/MeshInstance.gd" type="Script" id=4]
[ext_resource path="res://Scripts/Viewport.gd" type="Script" id=5]
[ext_resource path="res://Gui/eurofurence/eurof35.ttf" type="DynamicFontData" id=6]
[ext_resource path="res://Stuff to delete later/Coin.png" type="Texture" id=7]
[ext_resource path="res://Gui/OtherScripts/MoneyAmount.gd" type="Script" id=8]
[ext_resource path="res://Gui/InteractIndicator.gd" type="Script" id=9]
[ext_resource path="res://Gui/OtherScripts/DialogueManager.gd" type="Script" id=10]
[ext_resource path="res://Stuff to delete later/Ballon.png" type="Texture" id=11]
[ext_resource path="res://Stuff to delete later/Circular Thingy.png" type="Texture" id=12]
[ext_resource path="res://Game/Character/Stamina Bar.gd" type="Script" id=13]
[ext_resource path="res://Music/One Man Symphony - A New Day's Hurry (Free)/One Man Symphony - A New Day's Hurry (Free) - 09 Ice Dungeon Theme (Level 1).mp3" type="AudioStream" id=14]
[ext_resource path="res://Music/Music.gd" type="Script" id=15]
[ext_resource path="res://Music/MusicPlayer.gd" type="Script" id=16]
[ext_resource path="res://Music/One Man Symphony - A New Day's Hurry (Free)/One Man Symphony - A New Day's Hurry (Free) - 01 A New Day Begins (General Background Music).mp3" type="AudioStream" id=17]
[ext_resource path="res://Gui/cavalier/Cavalier-Bold.ttf" type="DynamicFontData" id=18]
[ext_resource path="res://Gui/CakeAlert.gd" type="Script" id=19]
[ext_resource path="res://Gui/OtherScripts/Timer.gd" type="Script" id=20]
[ext_resource path="res://Stuff to delete later/FinalCake.png" type="Texture" id=21]
[ext_resource path="res://SFX/AudioStreamPlayer.tscn" type="PackedScene" id=22]
[ext_resource path="res://SFX/Coin.wav" type="AudioStream" id=23]
[ext_resource path="res://Stuff to delete later/BackLayer.png" type="Texture" id=24]
[ext_resource path="res://Stuff to delete later/2nd Layer.png" type="Texture" id=25]
[ext_resource path="res://Stuff to delete later/Front Layer.png" type="Texture" id=26]
[ext_resource path="res://Stuff to delete later/Stars.png" type="Texture" id=27]

[sub_resource type="Shader" id=18]
code = "shader_type canvas_item;
uniform int radius = 5;
uniform vec3 offset=vec3(0.0);
void fragment() 
 {
     vec2 src_size = vec2 ( SCREEN_PIXEL_SIZE.x,  SCREEN_PIXEL_SIZE.y);
     vec2 uv = UV.xy;
     float n = float((radius + 1) * (radius + 1));
     vec3 m0 = offset; vec3 m1 = offset; vec3 m2 = offset; vec3 m3 = offset;
     vec3 s0 = offset; vec3 s1 = offset; vec3 s2 = offset; vec3 s3 = offset;
     vec3 c;

     for (int j = -radius; j <= 0; ++j)  {
         for (int i = -radius; i <= 0; ++i)  {
             c = texture(TEXTURE, uv + vec2(float(i),float(j)) * src_size).rgb;
             m0 += c;
             s0 += c * c;
         }
     }

     for (int j = -radius; j <= 0; ++j)  {
         for (int i = 0; i <= radius; ++i)  {
             c = texture(TEXTURE, uv + vec2(float(i),float(j)) * src_size).rgb;
             m1 += c;
             s1 += c * c;
         }
     }

     for (int j = 0; j <= radius; ++j)  {
         for (int i = 0; i <= radius; ++i)  {
             c = texture(TEXTURE, uv + vec2(float(i),float(j)) * src_size).rgb;
             m2 += c;
             s2 += c * c;
         }
     }

     for (int j = 0; j <= radius; ++j)  {
         for (int i = -radius; i <= 0; ++i)  {
             c = texture(TEXTURE, uv + vec2(float(i),float(j)) * src_size).rgb;
             m3 += c;
             s3 += c * c;
         }
     }


     float min_sigma2 = 1e+2;
     m0 /= n;
     s0 = abs(s0 / n - m0 * m0);

     float sigma2 = s0.r + s0.g + s0.b;
     if (sigma2 < min_sigma2) {
         min_sigma2 = sigma2;
         COLOR = vec4(m0, 1.0);
     }

     m1 /= n;
     s1 = abs(s1 / n - m1 * m1);

     sigma2 = s1.r + s1.g + s1.b;
     if (sigma2 < min_sigma2) {
         min_sigma2 = sigma2;
         COLOR = vec4(m1, 1.0);
     }

     m2 /= n;
     s2 = abs(s2 / n - m2 * m2);

     sigma2 = s2.r + s2.g + s2.b;
     if (sigma2 < min_sigma2) {
         min_sigma2 = sigma2;
         COLOR = vec4(m2, 1.0);
     }

     m3 /= n;
     s3 = abs(s3 / n - m3 * m3);

     sigma2 = s3.r + s3.g + s3.b;
     if (sigma2 < min_sigma2) {
         min_sigma2 = sigma2;
         COLOR = vec4(m3, 1.0);
     }
 }"

[sub_resource type="ShaderMaterial" id=19]
shader = SubResource( 18 )
shader_param/radius = 2
shader_param/offset = Vector3( 0, 0.1, 0 )

[sub_resource type="QuadMesh" id=34]
size = Vector2( 2, 2 )

[sub_resource type="Shader" id=33]
code = "//THIS SHADER MUST BE APPLIED TO A QUAD (MeshInstance) WITH A SIZE OF (2, 2)
//Extra Cull Margin on the quad should be turned up all the way!

shader_type spatial;
render_mode unshaded;

uniform int outline_mode : hint_range(1, 3, 1) = 3;
uniform float outline_intensity : hint_range(0, 5) = 1;
uniform bool _round = false;
uniform float outline_bias : hint_range(-10, 10) = 0;

uniform vec4 outline_color : hint_color = vec4(0.0, 0.0, 0.0, 1.0);

void vertex() {
	POSITION = vec4(VERTEX, 1.0);
}

void fragment() {
	ALBEDO = outline_color.rgb;
	
	vec2 screen_size = vec2(textureSize(SCREEN_TEXTURE, 1));
	
	float px = 0.5/screen_size.x;
	float py = 0.5/screen_size.y;
	
	float d = texture(DEPTH_TEXTURE, SCREEN_UV).x;
	float du = texture(DEPTH_TEXTURE, SCREEN_UV+vec2(0.0, py)).x;
	float dd = texture(DEPTH_TEXTURE, SCREEN_UV+vec2(0.0, -py)).x;
	float dr = texture(DEPTH_TEXTURE, SCREEN_UV+vec2(px, 0.0)).x;
	float dl = texture(DEPTH_TEXTURE, SCREEN_UV+vec2(-px, 0.0)).x;
	
	if (outline_mode == 1){
		ALPHA = 0.0 + abs(abs(d)-abs(du)) + abs(abs(d)-abs(dd)) + abs(abs(d)-abs(dl)) + abs(abs(d)-abs(dr));
			
		ALPHA *= 1000.0*outline_intensity;
	} else if (outline_mode == 2) {
		ALPHA = 0.0 + abs(abs(abs(d)-abs(du)) - abs(abs(d)-abs(dd))) + abs(abs(abs(d)-abs(dl)) - abs(abs(d)-abs(dr)));
		
		ALPHA *= 3.0*50000.0*outline_intensity;
	} else if (outline_mode == 3) {
		float dq = texture(DEPTH_TEXTURE, SCREEN_UV+vec2(-px, py)).x;
		float de = texture(DEPTH_TEXTURE, SCREEN_UV+vec2(px, py)).x;
		float dz = texture(DEPTH_TEXTURE, SCREEN_UV+vec2(-px, -py)).x;
		float dc = texture(DEPTH_TEXTURE, SCREEN_UV+vec2(px, -py)).x;
		
		ALPHA = 0.0 + abs(abs(abs(d)-abs(du)) - abs(abs(d)-abs(dd))) + abs(abs(abs(d)-abs(dl)) - abs(abs(d)-abs(dr))) + abs(abs(abs(d)-abs(dq)) - abs(abs(d)-abs(dc))) + abs(abs(abs(d)-abs(dz)) - abs(abs(d)-abs(de)));

		ALPHA *= 50000.0*outline_intensity;
	}
	
	ALPHA += outline_bias;
	
	if (_round) {
		ALPHA = round(ALPHA);
	}
	
	ALPHA *= outline_color.a;
}

//Written by Warren Jennings"

[sub_resource type="ShaderMaterial" id=35]
shader = SubResource( 33 )
shader_param/outline_mode = 1
shader_param/outline_intensity = 5.0
shader_param/_round = false
shader_param/outline_bias = -0.5
shader_param/outline_color = Color( 0.219608, 0, 0.0823529, 1 )

[sub_resource type="DynamicFont" id=20]
size = 35
use_mipmaps = true
use_filter = true
font_data = ExtResource( 6 )

[sub_resource type="DynamicFont" id=36]
size = 64
outline_size = 3
outline_color = Color( 0, 0, 0, 1 )
use_mipmaps = true
use_filter = true
font_data = ExtResource( 18 )

[sub_resource type="Animation" id=37]
resource_name = "Grow"
length = 0.4
tracks/0/type = "bezier"
tracks/0/path = NodePath("TextureRect:rect_scale:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 1e-05, -0.25, 0, 0.25, 0, 60, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.4 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("TextureRect:rect_scale:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( 1e-05, -0.25, 0, 0.25, 0, 60, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.4 )
}
tracks/2/type = "method"
tracks/2/path = NodePath("..")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"values": [ {
"args": [ "Credits" ],
"method": "fast_switch_gui"
}, {
"args": [  ],
"method": "pause"
} ]
}

[sub_resource type="Animation" id=38]
length = 0.001
tracks/0/type = "bezier"
tracks/0/path = NodePath("TextureRect:rect_scale:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("TextureRect:rect_scale:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}

[sub_resource type="Animation" id=1]
resource_name = "InterpolateIn"
length = 0.3
tracks/0/type = "bezier"
tracks/0/path = NodePath("ColorRect:modulate:r")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.3 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("ColorRect:modulate:g")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.3 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("ColorRect:modulate:b")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.3 )
}
tracks/3/type = "bezier"
tracks/3/path = NodePath("ColorRect:modulate:a")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.3 )
}

[sub_resource type="Animation" id=2]
resource_name = "InterpolateOut"
length = 0.3
tracks/0/type = "method"
tracks/0/path = NodePath(".")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0.3 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [ "pause" ],
"method": "fast_switch_gui"
} ]
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("ColorRect:modulate:r")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.3 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("ColorRect:modulate:g")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.3 )
}
tracks/3/type = "bezier"
tracks/3/path = NodePath("ColorRect:modulate:b")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.3 )
}
tracks/4/type = "bezier"
tracks/4/path = NodePath("ColorRect:modulate:a")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.3 )
}

[sub_resource type="Animation" id=3]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRect:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0.196078, 0.227451, 0.286275, 1 ) ]
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("ColorRect:color:r")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( 0.196078, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("ColorRect:color:g")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 0.227451, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}
tracks/3/type = "bezier"
tracks/3/path = NodePath("ColorRect:color:b")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"points": PoolRealArray( 0.286275, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}
tracks/4/type = "bezier"
tracks/4/path = NodePath("ColorRect:color:a")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}
tracks/5/type = "bezier"
tracks/5/path = NodePath("ColorRect:modulate:r")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}
tracks/6/type = "bezier"
tracks/6/path = NodePath("ColorRect:modulate:g")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}
tracks/7/type = "bezier"
tracks/7/path = NodePath("ColorRect:modulate:b")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}
tracks/8/type = "bezier"
tracks/8/path = NodePath("ColorRect:modulate:a")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}

[sub_resource type="Animation" id=4]
resource_name = "Wait"
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRect:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0.196078, 0.227451, 0.286275, 1 ) ]
}

[sub_resource type="Animation" id=39]
resource_name = "Idle"
length = 1.2
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Front:rect_position")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3, 0.9, 1.2 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( -112, 24 ), Vector2( -192, 24 ), Vector2( -56, 24 ), Vector2( -112, 24 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Mid:rect_position")
tracks/1/interp = 2
tracks/1/loop_wrap = false
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3, 0.9, 1.2 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( -112, 24 ), Vector2( -56, 24 ), Vector2( -192, 24 ), Vector2( -112, 24 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Back:rect_position")
tracks/2/interp = 2
tracks/2/loop_wrap = false
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.3, 0.9, 1.2 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( -112, 24 ), Vector2( -192, 24 ), Vector2( -56, 24 ), Vector2( -112, 24 ) ]
}

[sub_resource type="Animation" id=40]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Front:rect_size")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 1280, 720 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Front:rect_position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Mid:rect_position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( -112, 24 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Back:rect_position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( -112, 24 ) ]
}

[node name="God" type="Control" groups=["resetstuff"]]
pause_mode = 2
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 2 )

[node name="Main Game" type="ViewportContainer" parent="."]
pause_mode = 1
show_behind_parent = true
material = SubResource( 19 )
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
stretch = true
stretch_shrink = 2

[node name="Viewport" type="Viewport" parent="Main Game"]
size = Vector2( 640, 360 )
handle_input_locally = false
fxaa = true
debanding = true
render_target_update_mode = 3
audio_listener_enable_3d = true
shadow_atlas_size = 1024
script = ExtResource( 5 )

[node name="Game" parent="Main Game/Viewport" instance=ExtResource( 1 )]

[node name="MeshInstance" type="MeshInstance" parent="Main Game"]
mesh = SubResource( 34 )
material/0 = SubResource( 35 )
script = ExtResource( 4 )

[node name="Control" type="Control" parent="."]
pause_mode = 1
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2

[node name="ColorRect" type="ColorRect" parent="Control"]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -105.0
margin_top = 16.0
margin_right = -8.0
margin_bottom = 56.0
mouse_filter = 2
color = Color( 0, 0, 0, 0.45098 )
script = ExtResource( 8 )

[node name="RichTextLabel" type="RichTextLabel" parent="Control/ColorRect"]
margin_left = 2.0
margin_right = 68.0
margin_bottom = 40.0
grow_horizontal = 0
custom_colors/default_color = Color( 1, 1, 1, 1 )
custom_fonts/normal_font = SubResource( 20 )
bbcode_enabled = true
bbcode_text = "[right]0[/right]"
text = "0"

[node name="TextureRect" type="TextureRect" parent="Control/ColorRect"]
margin_left = 68.0
margin_top = 7.0
margin_right = 254.0
margin_bottom = 193.0
rect_scale = Vector2( 0.15, 0.15 )
texture = ExtResource( 7 )
stretch_mode = 1

[node name="AudioStreamPlayer" parent="Control/ColorRect" instance=ExtResource( 22 )]
stream = ExtResource( 23 )

[node name="Control" type="Control" parent="Control"]
pause_mode = 1
mouse_filter = 1
script = ExtResource( 10 )

[node name="AudioStreamPlayer2" parent="Control/Control" instance=ExtResource( 22 )]
stream = ExtResource( 23 )
volume_db = -10.0
pitch_scale = 1.78
normal_range = 1.78

[node name="Control2" type="Control" parent="Control"]
margin_right = 40.0
margin_bottom = 40.0
mouse_filter = 2
script = ExtResource( 9 )

[node name="TextureRect" type="TextureRect" parent="Control/Control2"]
anchor_left = 16.575
anchor_top = 7.075
anchor_right = 16.575
anchor_bottom = 7.075
margin_left = -104.0
margin_top = -88.0
margin_right = 152.0
margin_bottom = 168.0
rect_scale = Vector2( 1e-05, 1e-05 )
rect_pivot_offset = Vector2( 120, 120 )
mouse_filter = 2
texture = ExtResource( 11 )
expand = true

[node name="Label" type="Label" parent="Control/Control2/TextureRect"]
margin_left = 112.5
margin_top = 50.0
margin_right = 152.5
margin_bottom = 86.0
rect_scale = Vector2( 4, 4 )
custom_fonts/font = SubResource( 20 )
text = "E"

[node name="Stamina Bar" type="TextureProgress" parent="Control"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -12.0
margin_top = 32.0
margin_right = 1012.0
margin_bottom = 1056.0
rect_scale = Vector2( 0.025, 0.025 )
mouse_filter = 2
step = 0.1
value = 100.0
texture_under = ExtResource( 12 )
texture_progress = ExtResource( 12 )
fill_mode = 4
tint_under = Color( 0.101961, 0.101961, 0.101961, 0.364706 )
tint_over = Color( 0.321569, 0.321569, 0.321569, 1 )
tint_progress = Color( 0.517647, 1, 0.572549, 1 )
script = ExtResource( 13 )

[node name="Timer" type="Timer" parent="Control/Stamina Bar"]
one_shot = true

[node name="Stamina Bar2" type="TextureProgress" parent="Control/Stamina Bar"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -512.0
margin_top = -512.0
margin_right = 512.0
margin_bottom = 512.0
mouse_filter = 2
step = 0.1
value = 25.0
texture_under = ExtResource( 12 )
texture_progress = ExtResource( 12 )
fill_mode = 4
tint_under = Color( 1, 1, 1, 0 )
tint_over = Color( 1, 1, 1, 0 )
tint_progress = Color( 0.976471, 0.796078, 0.25098, 1 )

[node name="Label" type="Label" parent="Control"]
modulate = Color( 1, 1, 1, 0 )
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -146.0
margin_top = -196.0
margin_right = 146.0
margin_bottom = -132.0
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_fonts/font = SubResource( 36 )
text = "CAKE AQUIRED"
script = ExtResource( 19 )

[node name="Timer" type="Timer" parent="Control/Label"]
wait_time = 0.6
one_shot = true

[node name="TimerLabel" type="Label" parent="Control"]
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
margin_left = -20.0
margin_top = -78.0
margin_right = 20.0
margin_bottom = -14.0
grow_horizontal = 2
rect_scale = Vector2( 0.6, 0.6 )
custom_fonts/font = SubResource( 36 )
align = 1
valign = 1
script = ExtResource( 20 )

[node name="TextureRect" type="TextureRect" parent="Control"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -20.0
margin_top = -20.0
margin_right = 20.0
margin_bottom = 20.0
grow_horizontal = 2
grow_vertical = 2
rect_scale = Vector2( 1e-05, 1e-05 )
rect_pivot_offset = Vector2( 20, 20 )
texture = ExtResource( 21 )
expand = true

[node name="AnimationPlayer" type="AnimationPlayer" parent="Control"]
anims/Grow = SubResource( 37 )
anims/RESET = SubResource( 38 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
pause_mode = 2
anims/InterpolateIn = SubResource( 1 )
anims/InterpolateOut = SubResource( 2 )
anims/RESET = SubResource( 3 )
anims/Wait = SubResource( 4 )

[node name="ColorRect" type="ColorRect" parent="."]
pause_mode = 2
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
color = Color( 0.196078, 0.227451, 0.286275, 1 )

[node name="Control" type="Control" parent="ColorRect"]
margin_right = 40.0
margin_bottom = 40.0
mouse_filter = 2

[node name="Back" type="TextureRect" parent="ColorRect/Control"]
margin_left = -112.0
margin_top = 24.0
margin_right = 1168.0
margin_bottom = 744.0
rect_scale = Vector2( 1.2, 1 )
texture = ExtResource( 24 )

[node name="Mid" type="TextureRect" parent="ColorRect/Control"]
margin_left = -112.0
margin_top = 24.0
margin_right = 1168.0
margin_bottom = 744.0
rect_scale = Vector2( 1.2, 1 )
texture = ExtResource( 25 )

[node name="Front" type="TextureRect" parent="ColorRect/Control"]
margin_right = 1280.0
margin_bottom = 720.0
rect_scale = Vector2( 1.2, 1 )
texture = ExtResource( 26 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="ColorRect/Control"]
autoplay = "Idle"
playback_speed = 0.1
anims/Idle = SubResource( 39 )
anims/RESET = SubResource( 40 )

[node name="TextureRect" type="TextureRect" parent="ColorRect/Control"]
modulate = Color( 1, 1, 1, 0.333333 )
margin_right = 40.0
margin_bottom = 40.0
texture = ExtResource( 27 )

[node name="Main Menu" parent="ColorRect" instance=ExtResource( 3 )]

[node name="Camera2D" type="Camera2D" parent="."]
pause_mode = 2
offset = Vector2( 640, 360 )
current = true

[node name="MusicPlayer" type="Control" parent="."]
pause_mode = 2
margin_right = 40.0
margin_bottom = 40.0
mouse_filter = 2
script = ExtResource( 16 )

[node name="Menu" type="AudioStreamPlayer" parent="MusicPlayer"]
stream = ExtResource( 14 )
volume_db = -80.0
autoplay = true
mix_target = 1
bus = "Music"
script = ExtResource( 15 )
is_menu = true

[node name="Switch1" type="AudioStreamPlayer" parent="MusicPlayer"]
stream = ExtResource( 17 )
volume_db = -80.0
autoplay = true
mix_target = 1
bus = "Music"
script = ExtResource( 15 )

[node name="Switch2" type="AudioStreamPlayer" parent="MusicPlayer"]
volume_db = -80.0
autoplay = true
mix_target = 1
bus = "Music"
script = ExtResource( 15 )

[connection signal="timeout" from="Control/Stamina Bar/Timer" to="Control/Stamina Bar" method="_on_Timer_timeout"]
[connection signal="timeout" from="Control/Label/Timer" to="Control/Label" method="_on_Timer_timeout"]
